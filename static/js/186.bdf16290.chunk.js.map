{"version":3,"file":"static/js/186.bdf16290.chunk.js","mappings":"8LAkCA,UA7BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAmCE,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAqBC,EAArB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAqBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAf,GACxC,GAAE,CAACR,KAGF,2BAC6B,KAAb,OAAZG,QAAY,IAAZA,OAAA,EAAAA,EAAcM,UAAkB,uBAAG,+CACrC,wBACGN,EAAaO,KAAI,SAAAC,GAChB,OACE,2BACE,yBAAG,WAASA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAIR,C,+LC1BDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EAAQ,QACRC,EAAW,QAIXC,EAAW,mCAAG,oGACCJ,EAAAA,EAAAA,IAAA,sCAAyCC,EAAzC,0BAAkEC,IADnE,cACZT,EADY,yBAGXA,EAAKY,KAAKC,QAAQX,KAAI,YAC3B,MAAO,CAAEI,GADqC,EAAhBA,GACjBQ,MADiC,EAAZA,MAEnC,KALiB,2CAAH,qDASXC,EAAY,mCAAG,WAAMC,GAAN,uFACAT,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,0BAA4DC,EAA5D,kBAA2EO,EAA3E,qBAAkGN,EAAlG,YADA,cACbV,EADa,yBAGZA,EAAKY,KAAKC,QAAQX,KAAI,YAC3B,MAAO,CAAEI,GADqC,EAAhBA,GACjBQ,MADiC,EAAZA,MAEnC,KALkB,2CAAH,sDASZG,EAAe,mCAAG,WAAMzB,GAAN,uFACHe,EAAAA,EAAAA,IAAA,iBAAoBf,EAApB,oBAAuCgB,EAAvC,qBAA2DE,IADxD,cAChBV,EADgB,yBAGfA,EAAKY,MAHU,2CAAH,sDAOfM,EAAe,mCAAG,WAAMC,GAAN,uFACHZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,4BAAgDX,EAAhD,qBAAoEE,IADjE,cAChBV,EADgB,yBAGfA,EAAKY,KAAKQ,KAAKlB,KAAI,YACxB,MAAO,CAAEmB,KAD0D,EAAxCA,KACZC,UADoD,EAAlCA,UACPC,aADyC,EAAvBA,aACJjB,GAD2B,EAATA,GAE3D,KALqB,2CAAH,sDASfkB,EAAgB,mCAAG,WAAML,GAAN,uFACJZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,4BAAgDX,EAAhD,qBAAoEE,EAApE,YADI,cACjBV,EADiB,yBAGhBA,EAAKY,KAAKC,QAAQX,KAAI,YAC3B,MAAO,CAAEE,OAD+C,EAA1BA,OACbC,QADuC,EAAlBA,QACZC,GAD8B,EAATA,GAEhD,KALsB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/apiMoviedb.js"],"sourcesContent":["import * as API from 'services/apiMoviedb';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    API.getMoviesReviews(movieId).then(resp => setReviews(resp));\n  }, [movieId]);\n\n  return(\n    <div>\n      {(movieReviews?.length === 0) && (<p>We don't have any reviews for this movies</p>)} \n      <ul>\n        {movieReviews.map(review=>{\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  )\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b8b4ca8ae31738ae90c3cb58e4b03190';\nconst ADULT = 'false';\nconst LANGUAGE = 'en-US';\n//  20 items are always returned per page, no change!\n\n// общий список --- HomePage\nconst getTrending = async () => {\n  const resp = await axios.get(`/trending/movie/day?api_key=${API_KEY}&include_adult=${ADULT}`);\n  // console.log(resp.data.results);      // array\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\n// поиск по названию --- SearchForm\nconst searchMovies = async inputValue => {\n  const resp = await axios.get(`/search/movie?api_key=${API_KEY}&include_adult=${ADULT}&query=${inputValue}&language=${LANGUAGE}&page=1`);\n  // console.log(resp.data.results);       // array\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\n// описание 1 фильма --- MovieDetailsPage\nconst getMovieDetails = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=${LANGUAGE}`);\n  // console.log(resp.data);         // object\n  return resp.data;\n};\n\n// состав актеров --- Cast\nconst getMovieCredits = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/credits?api_key=${API_KEY}&language=${LANGUAGE}`);\n  // console.log(resp.data.cast);      // array\n  return resp.data.cast.map(({ name, character, profile_path, id }) => {\n    return { name, character, profile_path, id };\n  });\n};\n\n// отзывы --- Reviews\nconst getMoviesReviews = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/reviews?api_key=${API_KEY}&language=${LANGUAGE}&page=1`);\n  // console.log(resp.data.results);      // array\n  return resp.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n};\n\nexport {getTrending, searchMovies, getMovieDetails, getMovieCredits, getMoviesReviews};\n"],"names":["movieId","useParams","useState","movieReviews","setReviews","useEffect","API","then","resp","length","map","review","author","content","id","axios","API_KEY","ADULT","LANGUAGE","getTrending","data","results","title","searchMovies","inputValue","getMovieDetails","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews"],"sourceRoot":""}
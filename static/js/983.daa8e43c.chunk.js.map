{"version":3,"file":"static/js/983.daa8e43c.chunk.js","mappings":"oMAEaA,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,8ECED,UAdiB,WACf,OAAoCI,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAuBC,EAAvB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAkBC,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,EAAd,GAC5B,GAAE,KAGD,0BACE,SAAC,IAAD,CAAchB,OAAQW,KAG3B,C,+LCfDM,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EAAQ,QACRC,EAAW,QAIXC,EAAW,mCAAG,oGACCJ,EAAAA,EAAAA,IAAA,sCAAyCC,EAAzC,0BAAkEC,IADnE,cACZH,EADY,yBAGXA,EAAKM,KAAKC,QAAQpB,KAAI,YAC3B,MAAO,CAAEG,GADqC,EAAhBA,GACjBG,MADiC,EAAZA,MAEnC,KALiB,2CAAH,qDASXe,EAAY,mCAAG,WAAMC,GAAN,uFACAR,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,0BAA4DC,EAA5D,kBAA2EM,EAA3E,qBAAkGL,EAAlG,YADA,cACbJ,EADa,yBAGZA,EAAKM,KAAKC,QAAQpB,KAAI,YAC3B,MAAO,CAAEG,GADqC,EAAhBA,GACjBG,MADiC,EAAZA,MAEnC,KALkB,2CAAH,sDASZiB,EAAe,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,EAAvC,qBAA2DE,IADxD,cAChBJ,EADgB,yBAGfA,EAAKM,MAHU,2CAAH,sDAOfM,EAAe,mCAAG,WAAMC,GAAN,uFACHZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,4BAAgDX,EAAhD,qBAAoEE,IADjE,cAChBJ,EADgB,yBAGfA,EAAKM,KAAKQ,KAAK3B,KAAI,YACxB,MAAO,CAAE4B,KAD0D,EAAxCA,KACZC,UADoD,EAAlCA,UACPC,aADyC,EAAvBA,aACJ3B,GAD2B,EAATA,GAE3D,KALqB,2CAAH,sDASf4B,EAAgB,mCAAG,WAAML,GAAN,uFACJZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,4BAAgDX,EAAhD,qBAAoEE,EAApE,YADI,cACjBJ,EADiB,yBAGhBA,EAAKM,KAAKC,QAAQpB,KAAI,YAC3B,MAAO,CAAEgC,OAD+C,EAA1BA,OACbC,QADuC,EAAlBA,QACZ9B,GAD8B,EAATA,GAEhD,KALsB,2CAAH,qD","sources":["components/TrendingList/TrendingList.jsx","pages/HomePage.jsx","services/apiMoviedb.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};","import * as API from 'services/apiMoviedb';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\n\nconst HomePage = () => {\n  const [trendingMovies, setMovies] = useState([]);\n\n  useEffect(() => {\n    API.getTrending().then(resp => setMovies(resp));\n  }, []);\n\n  return (\n    <div>\n      <TrendingList movies={trendingMovies} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b8b4ca8ae31738ae90c3cb58e4b03190';\nconst ADULT = 'false';\nconst LANGUAGE = 'en-US';\n//  20 items are always returned per page, no change!\n\n// общий список --- HomePage\nconst getTrending = async () => {\n  const resp = await axios.get(`/trending/movie/day?api_key=${API_KEY}&include_adult=${ADULT}`);\n  // console.log(resp.data.results);      // array\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\n// поиск по названию --- SearchForm\nconst searchMovies = async inputValue => {\n  const resp = await axios.get(`/search/movie?api_key=${API_KEY}&include_adult=${ADULT}&query=${inputValue}&language=${LANGUAGE}&page=1`);\n  // console.log(resp.data.results);       // array\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\n// описание 1 фильма --- MovieDetailsPage\nconst getMovieDetails = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=${LANGUAGE}`);\n  // console.log(resp.data);         // object\n  return resp.data;\n};\n\n// состав актеров --- Cast\nconst getMovieCredits = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/credits?api_key=${API_KEY}&language=${LANGUAGE}`);\n  // console.log(resp.data.cast);      // array\n  return resp.data.cast.map(({ name, character, profile_path, id }) => {\n    return { name, character, profile_path, id };\n  });\n};\n\n// отзывы --- Reviews\nconst getMoviesReviews = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/reviews?api_key=${API_KEY}&language=${LANGUAGE}&page=1`);\n  // console.log(resp.data.results);      // array\n  return resp.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n};\n\nexport {getTrending, searchMovies, getMovieDetails, getMovieCredits, getMoviesReviews};\n"],"names":["TrendingList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","trendingMovies","setMovies","useEffect","API","then","resp","axios","API_KEY","ADULT","LANGUAGE","getTrending","data","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}
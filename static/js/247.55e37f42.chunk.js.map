{"version":3,"file":"static/js/247.55e37f42.chunk.js","mappings":"8LAyCA,UApCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAgBI,EAApB,GACvC,GAAE,CAACR,KAGF,2BAC4B,KAAb,OAAZG,QAAY,IAAZA,OAAA,EAAAA,EAAcM,UACb,uBAAG,+CAEL,wBACGN,EAAaO,KAAI,SAAAC,GAChB,OACE,2BACE,gBACEC,MAAO,IACPC,IAAG,0DAAqDF,EAAKG,cAC7DC,IAAKJ,EAAKK,QAEZ,uBAAIL,EAAKK,QACT,yBAAG,cAAYL,EAAKM,eAPbN,EAAKO,GAUjB,QAIR,C,+LCjCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EAAQ,QACRC,EAAW,QAIXC,EAAW,mCAAG,oGACCJ,EAAAA,EAAAA,IAAA,sCAAyCC,EAAzC,0BAAkEC,IADnE,cACZb,EADY,yBAGXA,EAAKgB,KAAKC,QAAQf,KAAI,YAC3B,MAAO,CAAEQ,GADqC,EAAhBA,GACjBQ,MADiC,EAAZA,MAEnC,KALiB,2CAAH,qDASXC,EAAY,mCAAG,WAAMC,GAAN,uFACAT,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,0BAA4DC,EAA5D,kBAA2EO,EAA3E,qBAAkGN,EAAlG,YADA,cACbd,EADa,yBAGZA,EAAKgB,KAAKC,QAAQf,KAAI,YAC3B,MAAO,CAAEQ,GADqC,EAAhBA,GACjBQ,MADiC,EAAZA,MAEnC,KALkB,2CAAH,sDASZG,EAAe,mCAAG,WAAM7B,GAAN,uFACHmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,oBAAuCoB,EAAvC,qBAA2DE,IADxD,cAChBd,EADgB,yBAGfA,EAAKgB,MAHU,2CAAH,sDAOfM,EAAe,mCAAG,WAAMC,GAAN,uFACHZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,4BAAgDX,EAAhD,qBAAoEE,IADjE,cAChBd,EADgB,yBAGfA,EAAKgB,KAAKb,KAAKD,KAAI,YACxB,MAAO,CAAEM,KAD0D,EAAxCA,KACZC,UADoD,EAAlCA,UACPH,aADyC,EAAvBA,aACJI,GAD2B,EAATA,GAE3D,KALqB,2CAAH,sDASfc,EAAgB,mCAAG,WAAMD,GAAN,uFACJZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,4BAAgDX,EAAhD,qBAAoEE,EAApE,YADI,cACjBd,EADiB,yBAGhBA,EAAKgB,KAAKC,QAAQf,KAAI,YAC3B,MAAO,CAAEuB,OAD+C,EAA1BA,OACbC,QADuC,EAAlBA,QACZhB,GAD8B,EAATA,GAEhD,KALsB,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/apiMoviedb.js"],"sourcesContent":["import * as API from 'services/apiMoviedb';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCredits, setMovieCredits] = useState([]);\n\n  useEffect(() => {\n    API.getMovieCredits(movieId).then(resp => setMovieCredits(resp));\n  }, [movieId]);\n\n  return (\n    <div>\n      {movieCredits?.length === 0 && (\n        <p>We don't have information about the cast.</p>\n      )}\n      <ul>\n        {movieCredits.map(cast => {\n          return (\n            <li key={cast.id}>\n              <img\n                width={100}\n                src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${cast.profile_path}`}\n                alt={cast.name}\n              />\n              <p>{cast.name}</p>\n              <p>Character: {cast.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b8b4ca8ae31738ae90c3cb58e4b03190';\nconst ADULT = 'false';\nconst LANGUAGE = 'en-US';\n//  20 items are always returned per page, no change!\n\n// общий список --- HomePage\nconst getTrending = async () => {\n  const resp = await axios.get(`/trending/movie/day?api_key=${API_KEY}&include_adult=${ADULT}`);\n  // console.log(resp.data.results);      // array\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\n// поиск по названию --- SearchForm\nconst searchMovies = async inputValue => {\n  const resp = await axios.get(`/search/movie?api_key=${API_KEY}&include_adult=${ADULT}&query=${inputValue}&language=${LANGUAGE}&page=1`);\n  // console.log(resp.data.results);       // array\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\n// описание 1 фильма --- MovieDetailsPage\nconst getMovieDetails = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&language=${LANGUAGE}`);\n  // console.log(resp.data);         // object\n  return resp.data;\n};\n\n// состав актеров --- Cast\nconst getMovieCredits = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/credits?api_key=${API_KEY}&language=${LANGUAGE}`);\n  // console.log(resp.data.cast);      // array\n  return resp.data.cast.map(({ name, character, profile_path, id }) => {\n    return { name, character, profile_path, id };\n  });\n};\n\n// отзывы --- Reviews\nconst getMoviesReviews = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/reviews?api_key=${API_KEY}&language=${LANGUAGE}&page=1`);\n  // console.log(resp.data.results);      // array\n  return resp.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n};\n\nexport {getTrending, searchMovies, getMovieDetails, getMovieCredits, getMoviesReviews};\n"],"names":["movieId","useParams","useState","movieCredits","setMovieCredits","useEffect","API","then","resp","length","map","cast","width","src","profile_path","alt","name","character","id","axios","API_KEY","ADULT","LANGUAGE","getTrending","data","results","title","searchMovies","inputValue","getMovieDetails","getMovieCredits","moviesId","getMoviesReviews","author","content"],"sourceRoot":""}
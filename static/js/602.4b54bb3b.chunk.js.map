{"version":3,"file":"static/js/602.4b54bb3b.chunk.js","mappings":"sMA4DA,UAxDyB,WAAO,IAAD,IACrBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBN,GAASO,MAAK,SAAAC,GAA2B,OAC3DJ,EAAgBI,EAD2C,GAG9D,GAAE,CAACR,IAEJ,IACMS,EAAQ,qBADGC,EAAAA,EAAAA,MACSC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEzC,OACE,4BACE,UAAC,KAAD,CAAMC,GAAIJ,EAAV,UACG,KACD,mBAAQK,KAAK,SAAb,SAAsB,gBAExB,0BACGX,EAAaY,MAAM,IACnBZ,EAAaa,aACVb,EAAaa,aAAaC,UAAU,EAAG,GACvC,GAAG,QAGT,gBACEC,IAAG,yDAAoDf,EAAagB,aACpEC,IAAKjB,EAAakB,kBAEpB,yBAAG,eACY,IACZlB,EAAamB,aACVC,KAAKC,OAAmC,GAA5BrB,EAAamB,cAAmBG,QAAQ,GACpD,OAEN,wBAAI,YACJ,uBACGtB,EAAauB,OACVvB,EAAauB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,IAClD,MAEN,uBAAG,4BACH,2BACE,yBACE,SAAC,KAAD,CAAMjB,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,KAAD,MAGL,C,+LCxDDkB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,6BAAgCC,IADjC,cACZE,EADY,yBAEXA,EAAKC,KAAKC,QAAQT,KAAI,YAC3B,MAAO,CAAEU,GADqC,EAAhBA,GACjBtB,MADiC,EAAZA,MAEnC,KAJiB,2CAAH,qDAOXuB,EAAY,mCAAG,WAAMC,GAAN,uFACAR,EAAAA,EAAAA,IAAA,uBAA0BC,EAA1B,kBAA2CO,EAA3C,2BADA,cACbL,EADa,yBAEZA,EAAKC,KAAKC,QAAQT,KAAI,YAC3B,MAAO,CAAEU,GADqC,EAAhBA,GACjBtB,MADiC,EAAZA,MAEnC,KAJkB,2CAAH,sDAOZyB,EAAe,mCAAG,WAAMxC,GAAN,uFACH+B,EAAAA,EAAAA,IAAA,iBAAoB/B,GAApB,OAA8BgC,EAA9B,oBADG,cAChBE,EADgB,yBAEfA,EAAKC,MAFU,2CAAH,sDAKfM,EAAe,mCAAG,WAAMC,GAAN,uFACHX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,mBAAuCV,EAAvC,oBADG,cAChBE,EADgB,yBAEfA,EAAKC,KAAKQ,KAAKhB,KAAI,YACxB,MAAO,CAAEE,KAD0D,EAAxCA,KACZe,UADoD,EAAlCA,UACPC,aADyC,EAAvBA,aACJR,GAD2B,EAATA,GAE3D,KAJqB,2CAAH,sDAOfS,EAAgB,mCAAG,WAAMJ,GAAN,uFACJX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,mBAAuCV,EAAvC,2BADI,cACjBE,EADiB,yBAEhBA,EAAKC,KAAKC,QAAQT,KAAI,YAC3B,MAAO,CAAEoB,OAD+C,EAA1BA,OACbC,QADuC,EAAlBA,QACZX,GAD8B,EAATA,GAEhD,KAJsB,2CAAH,qD","sources":["pages/MovieDetailsPage.jsx","services/apiMoviedb.js"],"sourcesContent":["import * as API from 'services/apiMoviedb';\nimport React, { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState([]);\n\n  useEffect(() => {\n    API.getMovieDetails(movieId).then(movieDetailsReturnedFromApi =>\n      setMovieDetails(movieDetailsReturnedFromApi)\n    );\n  }, [movieId]);\n\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <Link to={backLink}>\n        {' '}\n        <button type=\"button\">Go back</button>\n      </Link>\n      <h2>\n        {movieDetails.title}(\n        {movieDetails.release_date\n          ? movieDetails.release_date.substring(0, 4)\n          : ''}\n        )\n      </h2>\n      <img\n        src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${movieDetails.poster_path}`}\n        alt={movieDetails.original_title}\n      />\n      <p>\n        User Score: {' '}\n        {movieDetails.vote_average\n          ? Math.fround(movieDetails.vote_average * 10).toFixed(0)\n          : ''}\n      </p>\n      <h4>Genres</h4>\n      <p>\n        {movieDetails.genres\n          ? movieDetails.genres.map(genre => genre.name).join('')\n          : ''}\n      </p>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b8b4ca8ae31738ae90c3cb58e4b03190';\n\nconst getTrending = async () => {\n  const resp = await axios.get(`/trending/movie/day${API_KEY}`);\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nconst searchMovies = async inputValue => {\n  const resp = await axios.get(`/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`);\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nconst getMovieDetails = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}${API_KEY}&language=en-US`);\n  return resp.data;\n};\n\nconst getMovieCredits = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/credits${API_KEY}&language=en-US`);\n  return resp.data.cast.map(({ name, character, profile_path, id }) => {\n    return { name, character, profile_path, id };\n  });\n};\n\nconst getMoviesReviews = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`);\n  return resp.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n};\n\nexport {getTrending, searchMovies, getMovieDetails, getMovieCredits, getMoviesReviews};\n"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","useEffect","API","then","movieDetailsReturnedFromApi","backLink","useLocation","state","from","to","type","title","release_date","substring","src","poster_path","alt","original_title","vote_average","Math","fround","toFixed","genres","map","genre","name","join","axios","API_KEY","getTrending","resp","data","results","id","searchMovies","inputValue","getMovieDetails","getMovieCredits","moviesId","cast","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}
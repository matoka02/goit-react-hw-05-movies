{"version":3,"file":"static/js/149.93277d43.chunk.js","mappings":"oMAEaA,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,4HCsBD,EAjCmB,WACjB,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAoBA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SAChCD,GACFE,EAAAA,GAAiBF,GAAYG,MAAK,SAAAC,GAAG,OAAIT,EAAUS,EAAd,GAExC,GAAE,CAACP,KAGF,4BACE,kBAAMQ,SAfW,SAAAC,GACnBR,EAAgB,CAAES,MAAOD,EAAIE,OAAO,GAAGC,QACvCH,EAAII,gBAEL,EAWG,WACE,kBAAOC,KAAK,OAAOC,YAAY,eAC/B,mBAAQD,KAAK,SAAb,SAAsB,eAExB,SAAC5B,EAAA,EAAD,CAAcC,OAAQA,MAG3B,EC/BD,EAJe,WACb,OAAO,SAAC,EAAD,GACR,C,+LCFD6B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,6BAAgCC,IADjC,cACZE,EADY,yBAEXA,EAAKC,KAAKC,QAAQ/B,KAAI,YAC3B,MAAO,CAAEG,GADqC,EAAhBA,GACjBG,MADiC,EAAZA,MAEnC,KAJiB,2CAAH,qDAOX0B,EAAY,mCAAG,WAAMC,GAAN,uFACAP,EAAAA,EAAAA,IAAA,uBAA0BC,EAA1B,kBAA2CM,EAA3C,2BADA,cACbJ,EADa,yBAEZA,EAAKC,KAAKC,QAAQ/B,KAAI,YAC3B,MAAO,CAAEG,GADqC,EAAhBA,GACjBG,MADiC,EAAZA,MAEnC,KAJkB,2CAAH,sDAOZ4B,EAAe,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,iBAAoBS,GAApB,OAA8BR,EAA9B,oBADG,cAChBE,EADgB,yBAEfA,EAAKC,MAFU,2CAAH,sDAKfM,EAAe,mCAAG,WAAMC,GAAN,uFACHX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,mBAAuCV,EAAvC,oBADG,cAChBE,EADgB,yBAEfA,EAAKC,KAAKQ,KAAKtC,KAAI,YACxB,MAAO,CAAEuC,KAD0D,EAAxCA,KACZC,UADoD,EAAlCA,UACPC,aADyC,EAAvBA,aACJtC,GAD2B,EAATA,GAE3D,KAJqB,2CAAH,sDAOfuC,EAAgB,mCAAG,WAAML,GAAN,uFACJX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,mBAAuCV,EAAvC,2BADI,cACjBE,EADiB,yBAEhBA,EAAKC,KAAKC,QAAQ/B,KAAI,YAC3B,MAAO,CAAE2C,OAD+C,EAA1BA,OACbC,QADuC,EAAlBA,QACZzC,GAD8B,EAATA,GAEhD,KAJsB,2CAAH,qD","sources":["components/TrendingList/TrendingList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/apiMoviedb.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};","import * as API from 'services/apiMoviedb';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n\nconst SearchForm = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // useEffect(() => {\n  //   API.searchMovies(input).then(ret => setMovies(ret));\n  // }, [input]);\n  // return { movies };\n\n  const handleSubmit = evt => {\n    setSearchParams({ query: evt.target[0].value });\n    evt.preventDefault();\n    return;\n  };\n\n  useEffect(() => {\n    const movieTitle = searchParams.get('query');\n    if (movieTitle) {\n      API.searchMovies(movieTitle).then(ret => setMovies(ret));\n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Search...\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <TrendingList movies={movies} />\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import SearchForm from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  return <SearchForm />;\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b8b4ca8ae31738ae90c3cb58e4b03190';\n\nconst getTrending = async () => {\n  const resp = await axios.get(`/trending/movie/day${API_KEY}`);\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nconst searchMovies = async inputValue => {\n  const resp = await axios.get(`/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`);\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nconst getMovieDetails = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}${API_KEY}&language=en-US`);\n  return resp.data;\n};\n\nconst getMovieCredits = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/credits${API_KEY}&language=en-US`);\n  return resp.data.cast.map(({ name, character, profile_path, id }) => {\n    return { name, character, profile_path, id };\n  });\n};\n\nconst getMoviesReviews = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`);\n  return resp.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n};\n\nexport {getTrending, searchMovies, getMovieDetails, getMovieCredits, getMoviesReviews};\n"],"names":["TrendingList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","movieTitle","get","API","then","ret","onSubmit","evt","query","target","value","preventDefault","type","placeholder","axios","API_KEY","getTrending","resp","data","results","searchMovies","inputValue","getMovieDetails","movieId","getMovieCredits","moviesId","cast","name","character","profile_path","getMoviesReviews","author","content"],"sourceRoot":""}
{"version":3,"file":"static/js/247.ac1c6ace.chunk.js","mappings":"8LAsCA,UAjCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAgBI,EAApB,GACvC,GAAE,CAACR,KAGF,0BACE,wBACGG,EAAaM,KAAI,SAAAC,GAChB,OACE,2BACE,gBACEC,MAAO,IACPC,IAAG,0DAAqDF,EAAKG,cAC7DC,IAAKJ,EAAKK,QAEZ,uBAAIL,EAAKK,QACT,yBAAG,cAAYL,EAAKM,eAPbN,EAAKO,GAUjB,OAIR,C,+LC9BDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,6BAAgCC,IADjC,cACZX,EADY,yBAEXA,EAAKa,KAAKC,QAAQb,KAAI,YAC3B,MAAO,CAAEQ,GADqC,EAAhBA,GACjBM,MADiC,EAAZA,MAEnC,KAJiB,2CAAH,qDAOXC,EAAY,mCAAG,WAAMC,GAAN,uFACAP,EAAAA,EAAAA,IAAA,uBAA0BC,EAA1B,kBAA2CM,EAA3C,2BADA,cACbjB,EADa,yBAEZA,EAAKa,KAAKC,QAAQb,KAAI,YAC3B,MAAO,CAAEQ,GADqC,EAAhBA,GACjBM,MADiC,EAAZA,MAEnC,KAJkB,2CAAH,sDAOZG,EAAe,mCAAG,WAAM1B,GAAN,uFACHkB,EAAAA,EAAAA,IAAA,iBAAoBlB,GAApB,OAA8BmB,EAA9B,oBADG,cAChBX,EADgB,yBAEfA,EAAKa,MAFU,2CAAH,sDAKfM,EAAe,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,mBAAuCT,EAAvC,oBADG,cAChBX,EADgB,yBAEfA,EAAKa,KAAKX,KAAKD,KAAI,YACxB,MAAO,CAAEM,KAD0D,EAAxCA,KACZC,UADoD,EAAlCA,UACPH,aADyC,EAAvBA,aACJI,GAD2B,EAATA,GAE3D,KAJqB,2CAAH,sDAOfY,EAAgB,mCAAG,WAAMD,GAAN,uFACJV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,mBAAuCT,EAAvC,2BADI,cACjBX,EADiB,yBAEhBA,EAAKa,KAAKC,QAAQb,KAAI,YAC3B,MAAO,CAAEqB,OAD+C,EAA1BA,OACbC,QADuC,EAAlBA,QACZd,GAD8B,EAATA,GAEhD,KAJsB,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/apiMoviedb.js"],"sourcesContent":["import * as API from 'services/apiMoviedb';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCredits, setMovieCredits] = useState([]);\n\n  useEffect(() => {\n    API.getMovieCredits(movieId).then(resp => setMovieCredits(resp));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {movieCredits.map(cast => {\n          return (\n            <li key={cast.id}>\n              <img\n                width={100}\n                src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${cast.profile_path}`}\n                alt={cast.name}\n              />\n              <p>{cast.name}</p>\n              <p>Character: {cast.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b8b4ca8ae31738ae90c3cb58e4b03190';\n\nconst getTrending = async () => {\n  const resp = await axios.get(`/trending/movie/day${API_KEY}`);\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nconst searchMovies = async inputValue => {\n  const resp = await axios.get(`/search/movie${API_KEY}&query=${inputValue}&language=en-US&page=1`);\n  return resp.data.results.map(({ id, title }) => {\n    return { id, title };\n  });\n};\n\nconst getMovieDetails = async movieId => {\n  const resp = await axios.get(`/movie/${movieId}${API_KEY}&language=en-US`);\n  return resp.data;\n};\n\nconst getMovieCredits = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/credits${API_KEY}&language=en-US`);\n  return resp.data.cast.map(({ name, character, profile_path, id }) => {\n    return { name, character, profile_path, id };\n  });\n};\n\nconst getMoviesReviews = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}/reviews${API_KEY}&language=en-US&page=1`);\n  return resp.data.results.map(({ author, content, id }) => {\n    return { author, content, id };\n  });\n};\n\nexport {getTrending, searchMovies, getMovieDetails, getMovieCredits, getMoviesReviews};\n"],"names":["movieId","useParams","useState","movieCredits","setMovieCredits","useEffect","API","then","resp","map","cast","width","src","profile_path","alt","name","character","id","axios","API_KEY","getTrending","data","results","title","searchMovies","inputValue","getMovieDetails","getMovieCredits","moviesId","getMoviesReviews","author","content"],"sourceRoot":""}